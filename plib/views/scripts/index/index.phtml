<?php
/**
 * Resource Guardian - Dashboard View
 * src/plib/views/scripts/index/index.phtml
 */
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><?php echo htmlspecialchars($this->pageTitle ?? 'Resource Guardian'); ?></title>
    <link rel="stylesheet" href="<?php echo pm_Context::getBaseUrl(); ?>css/style.css">
    <style>
        /* Inline critical CSS for faster loading */
        .resource-guardian-dashboard {
            padding: 20px;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        }
        
        .status-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .card {
            background: #fff;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .card h3 {
            margin: 0 0 15px 0;
            color: #333;
            font-size: 16px;
        }
        
        .metric-value {
            font-size: 36px;
            font-weight: bold;
            color: #2196F3;
            margin-bottom: 10px;
        }
        
        .metric-status {
            padding: 5px 10px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: bold;
            display: inline-block;
        }
        
        .status-normal {
            background-color: #4CAF50;
            color: white;
        }
        
        .status-warning {
            background-color: #FF9800;
            color: white;
        }
        
        .status-critical {
            background-color: #F44336;
            color: white;
        }
        
        .charts-container {
            margin-bottom: 30px;
        }
        
        .chart-card {
            background: #fff;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .chart-card h3 {
            margin: 0 0 20px 0;
        }
        
        #metricsChart {
            max-height: 300px;
        }
        
        .alerts-table {
            background: #fff;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .table {
            width: 100%;
            border-collapse: collapse;
        }
        
        .table th,
        .table td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        
        .table th {
            background-color: #f5f5f5;
            font-weight: bold;
        }
        
        .alert-warning {
            background-color: #fff3cd;
        }
        
        .alert-critical {
            background-color: #f8d7da;
        }
        
        .badge {
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: bold;
        }
        
        .badge-warning {
            background-color: #FF9800;
            color: white;
        }
        
        .badge-critical {
            background-color: #F44336;
            color: white;
        }
    </style>
</head>
<body>
    <div class="resource-guardian-dashboard">
        <h1><?php echo htmlspecialchars($this->pageTitle ?? 'Resource Guardian Dashboard'); ?></h1>
        
        <!-- Current Status Cards -->
        <div class="status-cards">
            <div class="card cpu-card">
                <h3>CPU Usage</h3>
                <div class="metric-value" id="cpu-value">
                    <?php echo number_format($this->currentMetrics['cpu_usage'] ?? 0, 1); ?>%
                </div>
                <div class="metric-status" id="cpu-status"></div>
            </div>
            
            <div class="card ram-card">
                <h3>RAM Usage</h3>
                <div class="metric-value" id="ram-value">
                    <?php echo number_format($this->currentMetrics['ram_usage'] ?? 0, 1); ?>%
                </div>
                <div class="metric-status" id="ram-status"></div>
            </div>
            
            <div class="card mysql-card">
                <h3>MySQL Connections</h3>
                <div class="metric-value" id="mysql-value">
                    <?php echo intval($this->currentMetrics['mysql_connections'] ?? 0); ?>
                </div>
            </div>
            
            <div class="card alerts-card">
                <h3>Recent Alerts</h3>
                <div class="metric-value" id="alerts-count">
                    <?php echo count($this->recentAlerts ?? []); ?>
                </div>
            </div>
        </div>
        
        <!-- Charts -->
        <div class="charts-container">
            <div class="chart-card">
                <h3>CPU & RAM Usage (Last 24 Hours)</h3>
                <canvas id="metricsChart" width="400" height="200"></canvas>
            </div>
        </div>
        
        <!-- Recent Alerts Table -->
        <div class="alerts-table">
            <h3>Recent Alerts</h3>
            <table class="table">
                <thead>
                    <tr>
                        <th>Time</th>
                        <th>Type</th>
                        <th>Severity</th>
                        <th>Message</th>
                    </tr>
                </thead>
                <tbody id="alerts-tbody">
                    <?php if (isset($this->recentAlerts) && count($this->recentAlerts) > 0): ?>
                        <?php foreach ($this->recentAlerts as $alert): ?>
                        <tr class="alert-<?php echo htmlspecialchars($alert['severity']); ?>">
                            <td><?php echo date('Y-m-d H:i:s', $alert['timestamp']); ?></td>
                            <td><?php echo htmlspecialchars(ucfirst($alert['alert_type'])); ?></td>
                            <td>
                                <span class="badge badge-<?php echo htmlspecialchars($alert['severity']); ?>">
                                    <?php echo htmlspecialchars(ucfirst($alert['severity'])); ?>
                                </span>
                            </td>
                            <td><?php echo htmlspecialchars($alert['message']); ?></td>
                        </tr>
                        <?php endforeach; ?>
                    <?php else: ?>
                        <tr>
                            <td colspan="4" style="text-align: center; padding: 20px; color: #666;">
                                No recent alerts
                            </td>
                        </tr>
                    <?php endif; ?>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Load Chart.js from CDN -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.js"></script>
    
    <!-- Dashboard JavaScript -->
    <script>
        // Initialize on page load
        document.addEventListener('DOMContentLoaded', function() {
            initializeChart();
            loadMetrics();
            startAutoRefresh();
            updateStatusIndicators();
        });

        let metricsChart;

        function initializeChart() {
            const ctx = document.getElementById('metricsChart');
            if (!ctx) return;
            
            metricsChart = new Chart(ctx.getContext('2d'), {
                type: 'line',
                data: {
                    labels: [],
                    datasets: [
                        {
                            label: 'CPU Usage (%)',
                            data: [],
                            borderColor: 'rgb(255, 99, 132)',
                            backgroundColor: 'rgba(255, 99, 132, 0.1)',
                            tension: 0.1
                        },
                        {
                            label: 'RAM Usage (%)',
                            data: [],
                            borderColor: 'rgb(54, 162, 235)',
                            backgroundColor: 'rgba(54, 162, 235, 0.1)',
                            tension: 0.1
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            max: 100
                        }
                    }
                }
            });
        }

        function loadMetrics() {
            // Get base URL from Plesk context
            const baseUrl = '<?php echo pm_Context::getBaseUrl(); ?>';
            
            fetch(baseUrl + 'index/metrics-json?hours=24')
                .then(response => response.json())
                .then(data => {
                    updateChart(data);
                })
                .catch(error => {
                    console.error('Error loading metrics:', error);
                });
        }

        function updateChart(metrics) {
            if (!metricsChart) return;
            
            const labels = [];
            const cpuData = [];
            const ramData = [];
            
            metrics.forEach(metric => {
                const date = new Date(metric.timestamp * 1000);
                labels.push(date.toLocaleTimeString());
                cpuData.push(metric.cpu_usage);
                ramData.push(metric.ram_usage);
            });
            
            metricsChart.data.labels = labels;
            metricsChart.data.datasets[0].data = cpuData;
            metricsChart.data.datasets[1].data = ramData;
            metricsChart.update();
        }

        function updateCurrentMetrics() {
            const baseUrl = '<?php echo pm_Context::getBaseUrl(); ?>';
            
            fetch(baseUrl + 'index/current-json')
                .then(response => response.json())
                .then(data => {
                    if (data) {
                        document.getElementById('cpu-value').textContent = data.cpu_usage + '%';
                        document.getElementById('ram-value').textContent = data.ram_usage + '%';
                        document.getElementById('mysql-value').textContent = data.mysql_connections;
                        
                        updateStatusIndicator('cpu', data.cpu_usage);
                        updateStatusIndicator('ram', data.ram_usage);
                    }
                })
                .catch(error => {
                    console.error('Error updating metrics:', error);
                });
        }

        function updateStatusIndicator(type, value) {
            const statusEl = document.getElementById(type + '-status');
            if (!statusEl) return;
            
            let status = 'normal';
            
            if (type === 'cpu') {
                if (value >= 85) status = 'critical';
                else if (value >= 70) status = 'warning';
            } else if (type === 'ram') {
                if (value >= 90) status = 'critical';
                else if (value >= 75) status = 'warning';
            }
            
            statusEl.className = 'metric-status status-' + status;
            statusEl.textContent = status.toUpperCase();
        }

        function updateStatusIndicators() {
            const cpuValue = parseFloat(document.getElementById('cpu-value').textContent);
            const ramValue = parseFloat(document.getElementById('ram-value').textContent);
            
            updateStatusIndicator('cpu', cpuValue);
            updateStatusIndicator('ram', ramValue);
        }

        function startAutoRefresh() {
            // Refresh current metrics every 30 seconds
            setInterval(updateCurrentMetrics, 30000);
            
            // Refresh chart every 5 minutes
            setInterval(loadMetrics, 300000);
        }
    </script>
</body>
</html>